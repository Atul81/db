package atul.fluxpublisher.publish;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.tomcat.util.json.JSONParser;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import reactor.core.publisher.Flux;

import java.util.HashMap;
import java.util.Map;


@RestController
@RequestMapping("publisher")
public class PublishCtrl {

    @GetMapping("/allPublisher")
    public String publishingData() {
        return "Lawde";
    }

    @JsonFormat
    @GetMapping("/allPublisherFlux")
    public Flux<String> publishingFluxData() throws JsonProcessingException {
        ObjectMapper mapperObj = new ObjectMapper();
        Map<String, String> fluxRet = new HashMap<>();
        fluxRet.put("One", "Atul");
        fluxRet.put("Two", "Shujaat");
        String jsonResp = mapperObj.writeValueAsString(fluxRet);
        return  Flux.just(jsonResp);
    }

}

// Consumer Flux

package atul.consumer.consumerflux;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.tomcat.util.json.JSONParser;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import java.io.IOException;
import java.net.URL;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Logger;

import static org.apache.logging.log4j.message.MapMessage.MapFormat.JSON;


@RestController
@RequestMapping("publisher")
public class FluxConsumer {

    private static Logger log = Logger.getLogger("FluxConsumer");

    @JsonFormat
    @GetMapping("/allPublisher")
    public Map<String, String> publishingData() throws IOException {


      //  return "Lawde";

        RestTemplate  restTemplate = new RestTemplate();


        Map forObject = restTemplate.getForObject("http://localhost:8080/publisher/allPublisherFlux", Map.class);
        log.info(getObjectPrinting(forObject));
        return  forObject;
    }

    public String getObjectPrinting(Object inp) throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper(); // for Object printing to String
        return mapper.writeValueAsString(inp);
    }


}
